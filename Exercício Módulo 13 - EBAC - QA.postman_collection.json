{
	"info": {
		"_postman_id": "ca7e6c42-7acf-4101-8e25-31b82d68d984",
		"name": "Exercício Módulo 13 - EBAC - QA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const resposta = pm.response.json();\r",
							"pm.globals.set(\"token\", resposta.authorization);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"niccolas.cassel@teste.com.br\",\r\n    \"password\": \"123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{local}}/login",
					"host": [
						"{{local}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar Usuários Cadatrados",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verificar foi listado o usuário 'Níccolas Cassel'\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Níccolas Cassel\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{local}}/usuarios",
					"host": [
						"{{local}}"
					],
					"path": [
						"usuarios"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cadastrar Usuário com Dados Corretos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Verificar se o cadastro foi realizado com sucesso\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
							"});\r",
							"\r",
							"const resposta = pm.response.json();\r",
							"pm.globals.set(\"lastCreatedId\", resposta._id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"{{newUser}}\",\r\n  \"email\": \"{{newEmail}}\",\r\n  \"password\": \"123456\",\r\n  \"administrador\": \"true\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{local}}/usuarios",
					"host": [
						"{{local}}"
					],
					"path": [
						"usuarios"
					]
				}
			},
			"response": []
		},
		{
			"name": "Buscar Usuário por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verifica se o e-mail do novo usuário corresponde com a entrada\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.globals.get(\"newEmail\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{local}}/usuarios/{{lastCreatedId}}",
					"host": [
						"{{local}}"
					],
					"path": [
						"usuarios",
						"{{lastCreatedId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cadastrar Usuário Existente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Verificar se o retorno é de usuário já existente\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Este email já está sendo usado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"{{newUser}}\",\r\n  \"email\": \"{{newEmail}}\",\r\n  \"password\": \"123456\",\r\n  \"administrador\": \"true\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{local}}/usuarios",
					"host": [
						"{{local}}"
					],
					"path": [
						"usuarios"
					]
				}
			},
			"response": []
		},
		{
			"name": "Editar Usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verifica se os dados do usuário foram alterados corretamente\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nome\": \"Fernando Cassel\",\r\n    \"email\": \"focassel@teste.com.br\",\r\n    \"password\": \"123456\",\r\n    \"administrador\": \"true\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{local}}/usuarios/{{lastCreatedId}}",
					"host": [
						"{{local}}"
					],
					"path": [
						"usuarios",
						"{{lastCreatedId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Excluir Usuário Existente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verifica se o registro do usuário foi excluído corretamente\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{local}}/usuarios/{{lastCreatedId}}",
					"host": [
						"{{local}}"
					],
					"path": [
						"usuarios",
						"{{lastCreatedId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Excluir Usuário Inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verifica se o retorno é de nenhum registro encontrado para o ID informado\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Nenhum registro excluído\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{local}}/usuarios/{{lastCreatedId}}",
					"host": [
						"{{local}}"
					],
					"path": [
						"usuarios",
						"{{lastCreatedId}}"
					]
				}
			},
			"response": []
		}
	]
}